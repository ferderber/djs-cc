"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(t),p=o,g=u["".concat(c,".").concat(p)]||u[p]||m[p]||i;return t?r.createElement(g,a(a({ref:n},d),{},{components:t})):r.createElement(g,a({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},426:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:1,slug:"/"},c="Intro",l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Intro",description:"Let's cover how to setup a basic Discord.js bot using djs-cc!",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/djs-cc/",editUrl:"https://github.com/matthewferderber/djs-cc/edit/master/site/docs/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"Readme",permalink:"/djs-cc/api"}},d=[{value:"Getting Started",id:"getting-started",children:[]},{value:"Creating Commands",id:"creating-commands",children:[]},{value:"Registering Commands",id:"registering-commands",children:[]}],m={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"intro"},"Intro"),(0,i.kt)("p",null,"Let's cover how to setup a basic Discord.js bot using djs-cc!"),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"First install djs-cc using either:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add djs-cc discord.js\n# OR\nnpm install djs-cc discord.js\n")),(0,i.kt)("p",null,"Then, setup a client in the same way you would with ",(0,i.kt)("inlineCode",{parentName:"p"},"discord.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import { Intents } from "discord.js";\nimport { Client } from "djs-cc";\n\n// We wrap this top-level code in a function to use async\n(async () => {\n  // Initialize Client with the same arguments as discord.js\n  const client = new Client([\n    Intents.FLAGS.GUILDS,\n    Intents.FLAGS.GUILD_MESSAGES,\n  ]);\n  client.on("ready", () => {\n    console.log("Ready to start processing commands!");\n  });\n\n  console.log("Logging in...");\n  await client.login(process.env.DISCORD_BOT_TOKEN);\n  console.log("Logged in!");\n})();\n')),(0,i.kt)("h2",{id:"creating-commands"},"Creating Commands"),(0,i.kt)("p",null,"Now that we have the bot running, we can start adding features!"),(0,i.kt)("p",null,"Here's a very basic example of a command you could add to your bot:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Command } from \'djs-cc\';\n\nclass ReminderCommand extends Command {\n  constructor() {\n    super({\n      name: "reminder",\n      description: "Set a reminder and be notified after the time has elapsed.",\n      usage: "!reminder 1h \'Study for COMP 361 exam!\'",\n      args: [\n        new Argument({\n          name: "time",\n          type: ArgumentType.String,\n          required: true,\n        }),\n        new Argument({\n          name: "description",\n          type: ArgumentType.String,\n          required: true\n        })\n      ],\n    });\n  }\n  async run(msg, args) {\n    const time = args.get(\'time\');\n    setTimeout(() => msg.reply(`Reminder: ${args.get(\'description\')}`), time);\n    msg.reply(`Reminder set for ${time} from now.`);\n  }\n}\n')),(0,i.kt)("p",null,"You can also extract the Arguments and re-use the declarations in other commands to keep things clean."),(0,i.kt)("h2",{id:"registering-commands"},"Registering Commands"),(0,i.kt)("p",null,"Registering any command with your bot only requires adding it to your client:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// Register them one at a time\nclient.registerCommand(new ReminderCommand());\n// If you place all your commands in a directory, you can load them all at once\nclient.registerCommandDirectory('./commands');\n")))}u.isMDXComponent=!0}}]);